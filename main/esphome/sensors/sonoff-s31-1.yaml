# Basic Config
# sonoff_s31_1

substitutions:
  plugtag: sonoff-s31-1
  devicename: Sonoff S31 Lab Test Unit

wifi:
  ssid: protected
  password: P0pC0rnButt3r
  
  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "${plugtag} Fallback Hotspot"
    password: "WZO3n27xhFev"

# Enable captive portal if wifi ever changes
captive_portal:

# Enable Home Assistant API
api:
  # password: !secret api_password

ota:
  password: "6fd9b4c5093997a61ab120dca7a6033c"
  
esphome:
  name: ${plugtag}
  comment: ${devicename}
  platform: ESP8266
  board: esp01_1m

# Enable logging
logger:
  baud_rate: 0  # (UART logging interferes with cse7766)

# Device Specific Config
uart:
  rx_pin: RX
  baud_rate: 4800

status_led:
  pin: GPIO13

binary_sensor:
  - platform: gpio
    pin:
      number: GPIO0
      mode: INPUT_PULLUP
      inverted: True
    name: "${devicename} Button"
    on_press:
      - switch.toggle: relay
  - platform: status
    name: "${devicename} Status"     

# Enable time component to reset energy at midnight
time:
  - platform: homeassistant
    id: my_time 

sensor:
  - platform: wifi_signal
    name: "${devicename} WiFi Signal"
    update_interval: 60s
  - platform: total_daily_energy
    name: "${devicename} Total Daily Energy"
    power_id: power
    accuracy_decimals: 3
    unit_of_measurement: kWh
    filters:
      - multiply: 0.001
  - platform: cse7766
    update_interval: 3s
    current:
      name: "${devicename} Current"
      unit_of_measurement: A
      accuracy_decimals: 3
#      filters:
#        # Map from sensor -> measured value
#        - calibrate_linear:
#          - 0 -> 0
#          - 3.8 -> 3.957
#          - 5.9 -> 6.099
#          - 12.7 -> 13.046
#        # Make everything below 0.01A appear as just 0A.
#        # Furthermore it corrects 0.016A for the power usage of the plug.
#        - lambda: if (x < (0.01 - 0.016)) return 0; else return (x - 0.016);
    voltage:
      name: "${devicename} Voltage"
      unit_of_measurement: V
      accuracy_decimals: 1
#      filters:
#        # Map from sensor -> measured value
#        - calibrate_linear:
#          - 117.6 -> 118.43
#          - 116.8 -> 117.66
#          - 116.1 -> 116.87
#          - 114.3 -> 115.33
    power:
      name: "${devicename} Power"
      id: power
      unit_of_measurement: W
      accuracy_decimals: 0
#      filters:
#        # Map from sensor -> measured value
#        - calibrate_linear:
#          - 0 -> 0
#          - 451.5 -> 463.9
#          - 687.4 -> 705.53
#          - 1446.3 -> 1482.9
#        # Make everything below 2W appear as just 0W.
#        # Furthermore it corrects 0.91W for the power usage of the plug.
#        - lambda: if (x < (2 + 0.91)) return 0; else return (x - 0.91);
        
switch:
  - platform: gpio
    name: "${devicename}"
    icon: mdi:air-conditioner
    pin: GPIO12
    id: relay
